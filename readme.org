#+TITLE: HETI Stack Simulator
#+SUBTITLE: stack_sim.py
#+AUTHOR: Christopher Chen
#+DATE: 2020-04-28
#+OPTIONS: ^:nil toc:3 html5-fancy:t
* Introduction
- First of all there is NO guarantee that any of this is accurate. It
  is only based on hearsay about how the stack algorithm works
* The algorithm
Pseudocode but it's formatted as python for readability purposes
#+BEGIN_SRC python
for category in categories:
  for hospital in hospitals:
    for rank in range(length(hospitals)):
      preferenced_this = filter(lambda a: a.preferences[rank] == hospital and a.category == category, unallocated_applicants)
      hospital.fill(min(preferenced_this, random.select(preferenced_this, hospital.capacity)))
#+END_SRC
- For people who aren't nerds:
  - The algorithm first looks at category
  - Then allocates people to each hospital by rank
  - It fills spots in each hospital by selecting from people who preferenced that hospital, in descending order of rank
    - If there are more applicants who ranked that hospital than there are spots, it will randomly select from that pool so all spots are filled
    - Otherwise it just fills all of those spots with those applicants
* Implementation
- 3 possible scenarios were tested:
  1. Everybody preferences hospitals entirely randomly
  2. Everybody stacks
  3. Everybody stacks but moves a random hospital of their choice to
     first place
- Incomplete list of deviations from reality, simplifications and
  assumptions:
  1. Everyone chooses randomly
  2. No hospital is more favourable than another (corollary of assumption 1)
  3. Everybody has exact same stack
  4. Everyone who applies accepts the first job offer they get.
  5. There are no other entry schemes apart from the normal random-allocation route.
  6. Category 1 applicants are basically guaranteed a job (corollary
     of assumption 5).
- For nerds: all my code is on [[https://github.com/newageoflight/stack_sim/blob/master/stack_sim.py][Github]].
* Results
Now you can see there are some obvious problems with the results which
I intend to fix. First of all there are no allocations to ANYONE in
any category below 2, which makes no sense. But otherwise it seems
consistent with what people have been saying about the matching process.
** Everyone is random
[[./images/All random Satisfied applicants.png]]
|            | total | cat1 | cat2 | cat3 | cat4 | cat5 | cat6 |
|------------+-------+------+------+------+------+------+------|
| 1st        |   724 |  697 |   27 |    0 |    0 |    0 |    0 |
| 2nd        |    99 |   79 |   20 |    0 |    0 |    0 |    0 |
| 3rd        |    36 |   18 |   18 |    0 |    0 |    0 |    0 |
| 4th        |    52 |   26 |   26 |    0 |    0 |    0 |    0 |
| 5th        |    40 |   23 |   17 |    0 |    0 |    0 |    0 |
| 6th        |    23 |   20 |    3 |    0 |    0 |    0 |    0 |
| 7th        |     9 |    9 |    0 |    0 |    0 |    0 |    0 |
| 8th        |     9 |    9 |    0 |    0 |    0 |    0 |    0 |
| 9th        |    12 |   12 |    0 |    0 |    0 |    0 |    0 |
| 10th       |     2 |    2 |    0 |    0 |    0 |    0 |    0 |
| 11st       |     9 |    9 |    0 |    0 |    0 |    0 |    0 |
| 12nd       |     6 |    6 |    0 |    0 |    0 |    0 |    0 |
| 13rd       |     2 |    2 |    0 |    0 |    0 |    0 |    0 |
| 14th       |     4 |    4 |    0 |    0 |    0 |    0 |    0 |
| 15th       |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| placed     |  1027 |  916 |  111 |    0 |    0 |    0 |    0 |
| not_placed |   512 |    0 |   91 |  158 |  148 |  101 |   14 |
| total      |  1539 |  916 |  202 |  158 |  148 |  101 |   14 |
*** Total
[[./images/All random Satisfied applicants total.png]]
*** Category 1
[[./images/All random Satisfied applicants cat1.png]]
*** Category 2
[[./images/All random Satisfied applicants cat2.png]]
*** Category 3
[[./images/All random Satisfied applicants cat3.png]]
*** Category 4
[[./images/All random Satisfied applicants cat4.png]]
*** Category 5
[[./images/All random Satisfied applicants cat5.png]]
*** Category 6
[[./images/All random Satisfied applicants cat6.png]]
** Everyone stacks
[[./images/All stack Satisfied applicants.png]]
|            | total | cat1 | cat2 | cat3 | cat4 | cat5 | cat6 |
|------------+-------+------+------+------+------+------+------|
| 1st        |    64 |   64 |    0 |    0 |    0 |    0 |    0 |
| 2nd        |    71 |   71 |    0 |    0 |    0 |    0 |    0 |
| 3rd        |    51 |   51 |    0 |    0 |    0 |    0 |    0 |
| 4th        |    54 |   54 |    0 |    0 |    0 |    0 |    0 |
| 5th        |    49 |   49 |    0 |    0 |    0 |    0 |    0 |
| 6th        |    76 |   76 |    0 |    0 |    0 |    0 |    0 |
| 7th        |   121 |  121 |    0 |    0 |    0 |    0 |    0 |
| 8th        |    40 |   40 |    0 |    0 |    0 |    0 |    0 |
| 9th        |   125 |  125 |    0 |    0 |    0 |    0 |    0 |
| 10th       |    74 |   74 |    0 |    0 |    0 |    0 |    0 |
| 11st       |    51 |   51 |    0 |    0 |    0 |    0 |    0 |
| 12nd       |    68 |   68 |    0 |    0 |    0 |    0 |    0 |
| 13rd       |    66 |   66 |    0 |    0 |    0 |    0 |    0 |
| 14th       |    63 |    6 |   57 |    0 |    0 |    0 |    0 |
| 15th       |    54 |    0 |   54 |    0 |    0 |    0 |    0 |
| placed     |  1027 |  916 |  111 |    0 |    0 |    0 |    0 |
| not_placed |   512 |    0 |   91 |  158 |  148 |  101 |   14 |
| total      |  1539 |  916 |  202 |  158 |  148 |  101 |   14 |
*** Total
[[./images/All stack Satisfied applicants total.png]]
*** Category 1
[[./images/All stack Satisfied applicants cat1.png]]
*** Category 2
[[./images/All stack Satisfied applicants cat2.png]]
*** Category 3
[[./images/All stack Satisfied applicants cat3.png]]
*** Category 4
[[./images/All stack Satisfied applicants cat4.png]]
*** Category 5
[[./images/All stack Satisfied applicants cat5.png]]
*** Category 6
[[./images/All stack Satisfied applicants cat6.png]]
** Everyone stacks but moves a random to first
[[./images/All stack but put random at top Satisfied applicants.png]]
|            | total | cat1 | cat2 | cat3 | cat4 | cat5 | cat6 |
|------------+-------+------+------+------+------+------+------|
| 1st        |   766 |  740 |   26 |    0 |    0 |    0 |    0 |
| 2nd        |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| 3rd        |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| 4th        |     8 |    8 |    0 |    0 |    0 |    0 |    0 |
| 5th        |     2 |    2 |    0 |    0 |    0 |    0 |    0 |
| 6th        |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| 7th        |     1 |    1 |    0 |    0 |    0 |    0 |    0 |
| 8th        |    22 |   22 |    0 |    0 |    0 |    0 |    0 |
| 9th        |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| 10th       |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| 11st       |     0 |    0 |    0 |    0 |    0 |    0 |    0 |
| 12nd       |    31 |   31 |    0 |    0 |    0 |    0 |    0 |
| 13rd       |    31 |   31 |    0 |    0 |    0 |    0 |    0 |
| 14th       |   118 |   77 |   41 |    0 |    0 |    0 |    0 |
| 15th       |    48 |    4 |   44 |    0 |    0 |    0 |    0 |
| placed     |  1027 |  916 |  111 |    0 |    0 |    0 |    0 |
| not_placed |   512 |    0 |   91 |  158 |  148 |  101 |   14 |
| total      |  1539 |  916 |  202 |  158 |  148 |  101 |   14 |
*** Total
[[./images/All stack but put random at top Satisfied applicants total.png]]
*** Category 1
[[./images/All stack but put random at top Satisfied applicants cat1.png]]
*** Category 2
[[./images/All stack but put random at top Satisfied applicants cat2.png]]
*** Category 3
[[./images/All stack but put random at top Satisfied applicants cat3.png]]
*** Category 4
[[./images/All stack but put random at top Satisfied applicants cat4.png]]
*** Category 5
[[./images/All stack but put random at top Satisfied applicants cat5.png]]
*** Category 6
[[./images/All stack but put random at top Satisfied applicants cat6.png]]
* Discussion
- In short, under each strategy:
  1. All random
     - Fairest gradation of ranks from top to bottom
     - Nobody actually selects like this IRL (unless you're a weirdo)
  2. All stack
     - It's basically communism for internships.
     - You have a near-equal chance at landing just about every
       hospital.
  3. All stack but put a random on top
     - Interestingly, you're most likely to get (in order) your first
       or 14th preference.
     - Proportionally, more people will be shafted to the bottom.
     - This appears to be most consistent with the strategy people use
       IRL.
- It is also consistent with the following observations:
  - "The last 4 are the most important" - sort of. , a proportionally larger number of people are being shafted
    to the bottom.
  - "Stacking hurts your chances of getting to preferences 1-6"
    (HETI, 2020) - true wherever stacking is used.
- If this is indeed HETI's algorithm, satisfaction appears to be
 maximised under strategy 3
- There are a lot of deviations between this simulation and the
  actual data produced by HETI.
  - Not only do I not have all the information to make this simulation
    completely accurate, I did not factor in for all the other entry
    pathways and schemes. That's why the simulation output is so
    hilariously bad when it comes to anyone below category 1
* What should you do?
- Depends on what you want lmao
  - There is not enough data to draw any definitive conclusions on what
    the "best" strategy is, especially since a lot of simplifications
    were made to run this model
  - Strategy 3 gives you the best chance of getting your first preference
  - Strategy 2 is best if you don't care where you will end up, but
    given that IRL it is mostly a mix between strategies 2 and 3, this
    might not lead to the same result.
- My code could be wrong, feel free to fork me/submit a pull request
  on [[https://github.com/newageoflight/stack_sim][Github]] if you have something to add
* TODO Future directions/todos
- [ ] Significance analysis of results
- [ ] Further strategic analysis
- [ ] Fix the algorithm so it's more consistent with the real data
- [ ] Implement more scenarios e.g. some people stack, some people
  random
- [ ] More data is needed to make this more accurate e.g. how many
  people preference each hospital in what order every year?
* Sources
- I based my data on the AMSA Internship Guide[fn:1] and HETI's Annual Report[fn:2]

* Footnotes

[fn:2] https://www.heti.nsw.gov.au/__data/assets/pdf_file/0019/485002/Annual-Report-for-Medical-Graduate-Recruitment-for-the-2019-Clinical-Year.PDF 

[fn:1] https://www.amsa.org.au/sites/amsa.org.au/files/Internship%20Guide%202019%20Final.pdf

